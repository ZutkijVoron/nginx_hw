• Установить Nginx и настроить его на работу с PHP-FPM.
- sudo su
- apt install curl gnupg2 ca-certificates lsb-release ubuntu-keyring
- curl https://nginx.org/keys/nginx_signing.key | gpg --dearmor \
    | tee /usr/share/keyrings/nginx-archive-keyring.gpg >/dev/null
- echo "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \
http://nginx.org/packages/ubuntu `lsb_release -cs` nginx" \
    | tee /etc/apt/sources.list.d/nginx.list
- apt update 
		apt install nginx
- apt-get install php8.3-fpm -y
- nano /etc/nginx/sites-available/default
```
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    root /var/www/html;
    index index.php index.html index.htm index.nginx-debian.html;

    server_name _;

    location / {
        try_files $uri $uri/ =404;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;  # Убедитесь, что версия PHP-FPM совпадает с установленной
    }

    location ~ /\.ht {
        deny all;
    }
}
```
- nginx -t
- systemctl reload nginx
- systemctl reload php8.3-fpm
(так как у меня не хотело работать....)
- vi conf.d/default.conf
```
server {
    listen       80;
    server_name  localhost;

    charset utf-8;

    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.php index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    location ~ \.php$ {
        root           /usr/share/nginx/html;
        fastcgi_pass   unix:/run/php/php8.3-fpm.sock;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

```
- systemctl reload nginx
- systemctl reload php8.3-fpm
(но оно снова не захотело.....)
- vi /etc/php/8.3/fpm/pool.d/www.conf
/listen.mode (это поиск)
(её мы должны раскомментировать и поменять цифры на 0666)
- systemctl reload nginx
-	systemctl reload php8.3-fpm
• Установить Apache. Настроить обработку PHP. Добиться одновременной работы с Nginx.

• Настроить схему обратного прокси для Nginx (динамика - на Apache).

• Установить MySQL. Создать новую базу данных и таблицу в ней.

•* Установить пакет phpmyadmin и запустить его веб-интерфейс для управления MySQL.

•* Настроить схему балансировки трафика между несколькими серверами Apache на стороне Nginx с помощью модуля ngx_http_upstream_module.
